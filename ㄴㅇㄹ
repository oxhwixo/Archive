var app = express();
const swaggerUi = require('swagger-ui-express');
const swaggerJsdoc = require('swagger-jsdoc');
const options = {
 definition: {
   openapi: '3.0.0',
   info: {
     title: 'Hello World',
     version: '1.0.0',
   },
},
 apis: ['./routes/*.js'], // files containing annotations as above
};
const openapiSpec = swaggerJsdoc(options);
app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(openapiSpec));





const express = require('express');
const router = express.Router();
/**
* @openapi
* /api/hello:
*   get:
* * * * * * * * *
description: Welcome to swagger-jsdoc!
parameters:
  - name: name
    in: query
    required: false
    schema:
      type: string
responses:
200:
*         description: Returns a mysterious string.
*/
router.get('/hello', function (req, res, next) {
 const name = req.query.name || 'World';
 res.json({ message: `Hello ${name}` });
});
module.exports = router;











server {
    listen       80;
    listen       [::]:80;
    server_name  _;
    root         /usr/share/nginx/html;
    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;
    location / {
        sendfile off;
        proxy_pass         http://127.0.0.1:4000;
        proxy_redirect     default;
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_max_temp_file_size 0;
    }
    error_page 404 /404.html;
    location = /404.html {
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }
}
